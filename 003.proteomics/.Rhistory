# importantly, store your fuctional enrichment in a form of table which will be a supplementary file of your paper
storage_file = 'clusterProfiler_enrichments.tsv'
write.table(ck@compareClusterResult, storage_file, quote=FALSE, sep='\t')
?dotplot
#if (!require("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("ReactomePA")
#BiocManager::install("tictoc")
#BiocManager::install("wesanderson")
#
# 0. load libraries
#
library(crayon)
library(clusterProfiler)
library(enrichplot)
library(tictoc)
library(viridis)
library(ggplot2)
#
# 2. read files and generate lists of genes
#
filename = 'deps.04.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps04 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps04)
filename = 'deps.24.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps24 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps24)
geneLists = list('DEPs t = 4 h'=deps04$ENTREZID,
'DEPs t = 24 h'=deps24$ENTREZID)
#
# 3. run the analysis on different Ontologies
#
# this step takes surprisingly long time---
tic()
ck = compareCluster(geneLists,
fun="enrichPathway",
pvalueCutoff=1e-5)
toc()
p1 = dotplot(ck, size='count', showCategory=15, font.size=8)
print(p1)
# and I have a preference for cividis, but this is just personal preference
my_log_breaks = round(log10(0.05)):round(log10(min(ck@compareClusterResult$p.adjust)))
my_log_breaks = my_log_breaks[ my_log_breaks %% 2 == 0]
my_breaks = 10**my_log_breaks
p5 = p1 +  scale_fill_viridis(direction=-1, trans="log", breaks = my_breaks, option='cividis')
print(p5)
# arguably this plot communicates best data patterns, IMHO
# importantly, store your fuctional enrichment in a form of table which will be a supplementary file of your paper
storage_file = 'clusterProfiler_enrichments.tsv'
write.table(ck@compareClusterResult, storage_file, quote=FALSE, sep='\t')
ck = compareCluster(geneLists,
fun="enrichPathway",
pvalueCutoff=1e-4)
#if (!require("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("ReactomePA")
#BiocManager::install("tictoc")
#BiocManager::install("wesanderson")
#
# 0. load libraries
#
library(crayon)
library(clusterProfiler)
library(enrichplot)
library(tictoc)
library(viridis)
library(ggplot2)
#
# 2. read files and generate lists of genes
#
filename = 'deps.04.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps04 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps04)
filename = 'deps.24.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps24 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps24)
geneLists = list('DEPs t = 4 h'=deps04$ENTREZID,
'DEPs t = 24 h'=deps24$ENTREZID)
#
# 3. run the analysis on different Ontologies
#
# this step takes surprisingly long time---
tic()
ck = compareCluster(geneLists,
fun="enrichPathway",
pvalueCutoff=1e-4)
toc()
p1 = dotplot(ck, size='count', showCategory=15, font.size=8)
print(p1)
# and I have a preference for cividis, but this is just personal preference
my_log_breaks = round(log10(0.05)):round(log10(min(ck@compareClusterResult$p.adjust)))
my_log_breaks = my_log_breaks[ my_log_breaks %% 2 == 0]
my_breaks = 10**my_log_breaks
p5 = p1 +  scale_fill_viridis(direction=-1, trans="log", breaks = my_breaks, option='cividis')
print(p5)
# arguably this plot communicates best data patterns, IMHO
# importantly, store your fuctional enrichment in a form of table which will be a supplementary file of your paper
storage_file = 'clusterProfiler_enrichments.tsv'
write.table(ck@compareClusterResult, storage_file, quote=FALSE, sep='\t')
#
# 3. run the analysis on different Ontologies
#
# this step takes surprisingly long time---
significance_threshold = 1e-3
#if (!require("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("ReactomePA")
#BiocManager::install("tictoc")
#BiocManager::install("wesanderson")
#
# 0. load libraries
#
library(crayon)
library(clusterProfiler)
library(enrichplot)
library(tictoc)
library(viridis)
library(ggplot2)
#
# 2. read files and generate lists of genes
#
filename = 'deps.04.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps04 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps04)
filename = 'deps.24.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps24 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps24)
geneLists = list('DEPs t = 4 h'=deps04$ENTREZID,
'DEPs t = 24 h'=deps24$ENTREZID)
#
# 3. run the analysis on different Ontologies
#
# this step takes surprisingly long time---
significance_threshold = 1e-3
tic()
ck = compareCluster(geneLists,
fun="enrichPathway",
pvalueCutoff=significance_thresholds)
#if (!require("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("ReactomePA")
#BiocManager::install("tictoc")
#BiocManager::install("wesanderson")
#
# 0. load libraries
#
library(crayon)
library(clusterProfiler)
library(enrichplot)
library(tictoc)
library(viridis)
library(ggplot2)
#
# 2. read files and generate lists of genes
#
filename = 'deps.04.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps04 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps04)
filename = 'deps.24.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps24 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps24)
geneLists = list('DEPs t = 4 h'=deps04$ENTREZID,
'DEPs t = 24 h'=deps24$ENTREZID)
#
# 3. run the analysis on different Ontologies
#
# this step takes surprisingly long time---
significance_threshold = 1e-3
tic()
ck = compareCluster(geneLists,
fun="enrichPathway",
pvalueCutoff=significance_threshold)
toc()
p1 = dotplot(ck, size='count', showCategory=15, font.size=8)
print(p1)
# and I have a preference for cividis, but this is just personal preference
my_log_breaks = round(log10(significance_thresholds)):round(log10(min(ck@compareClusterResult$p.adjust)))
#if (!require("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("ReactomePA")
#BiocManager::install("tictoc")
#BiocManager::install("wesanderson")
#
# 0. load libraries
#
library(crayon)
library(clusterProfiler)
library(enrichplot)
library(tictoc)
library(viridis)
library(ggplot2)
#
# 2. read files and generate lists of genes
#
filename = 'deps.04.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps04 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps04)
filename = 'deps.24.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps24 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps24)
geneLists = list('DEPs t = 4 h'=deps04$ENTREZID,
'DEPs t = 24 h'=deps24$ENTREZID)
#
# 3. run the analysis on different Ontologies
#
# this step takes surprisingly long time---
significance_threshold = 1e-3
tic()
ck = compareCluster(geneLists,
fun="enrichPathway",
pvalueCutoff=significance_threshold)
toc()
p1 = dotplot(ck, size='count', showCategory=15, font.size=8)
print(p1)
# and I have a preference for cividis, but this is just personal preference
my_log_breaks = round(log10(significance_threshold)):round(log10(min(ck@compareClusterResult$p.adjust)))
my_log_breaks = my_log_breaks[ my_log_breaks %% 2 == 0]
my_breaks = 10**my_log_breaks
p5 = p1 +  scale_fill_viridis(direction=-1, trans="log", breaks = my_breaks, option='cividis')
print(p5)
# arguably this plot communicates best data patterns, IMHO
# importantly, store your fuctional enrichment in a form of table which will be a supplementary file of your paper
storage_file = 'clusterProfiler_enrichments.tsv'
write.table(ck@compareClusterResult, storage_file, quote=FALSE, sep='\t')
#if (!require("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("ReactomePA")
#BiocManager::install("tictoc")
#BiocManager::install("wesanderson")
#
# 0. load libraries
#
library(crayon)
library(clusterProfiler)
library(enrichplot)
library(tictoc)
library(viridis)
library(ggplot2)
#
# 2. read files and generate lists of genes
#
filename = 'deps.04.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps04 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps04)
filename = 'deps.24.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps24 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps24)
geneLists = list('DEPs t = 4 h'=deps04$ENTREZID,
'DEPs t = 24 h'=deps24$ENTREZID)
#
# 3. run the analysis on different Ontologies
#
# this step takes surprisingly long time---
significance_threshold = 0.01
tic()
ck = compareCluster(geneLists,
fun="enrichPathway",
pvalueCutoff=significance_threshold)
toc()
p1 = dotplot(ck, size='count', showCategory=15, font.size=8)
print(p1)
# and I have a preference for cividis, but this is just personal preference
my_log_breaks = round(log10(significance_threshold)):round(log10(min(ck@compareClusterResult$p.adjust)))
my_log_breaks = my_log_breaks[ my_log_breaks %% 2 == 0]
my_breaks = 10**my_log_breaks
p5 = p1 +  scale_fill_viridis(direction=-1, trans="log", breaks = my_breaks, option='cividis')
print(p5)
# arguably this plot communicates best data patterns, IMHO
# importantly, store your fuctional enrichment in a form of table which will be a supplementary file of your paper
storage_file = 'clusterProfiler_enrichments.tsv'
write.table(ck@compareClusterResult, storage_file, quote=FALSE, sep='\t')
# and I have a preference for cividis, but this is just personal preference
my_log_breaks = round(log10(significance_threshold)):round(log10(min(ck@compareClusterResult$p.adjust)))
my_log_breaks = my_log_breaks[ my_log_breaks %% 2 == 0]
my_log_breaks
#if (!require("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("ReactomePA")
#BiocManager::install("tictoc")
#BiocManager::install("wesanderson")
#
# 0. load libraries
#
library(crayon)
library(clusterProfiler)
library(enrichplot)
library(tictoc)
library(viridis)
library(ggplot2)
#
# 2. read files and generate lists of genes
#
filename = 'deps.04.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps04 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps04)
filename = 'deps.24.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps24 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps24)
geneLists = list('DEPs t = 4 h'=deps04$ENTREZID,
'DEPs t = 24 h'=deps24$ENTREZID)
#
# 3. run the analysis on different Ontologies
#
# this step takes surprisingly long time---
significance_threshold = 0.05
tic()
ck = compareCluster(geneLists,
fun="enrichPathway",
pvalueCutoff=significance_threshold)
toc()
p1 = dotplot(ck, size='count', showCategory=15, font.size=8)
print(p1)
# and I have a preference for cividis, but this is just personal preference
my_log_breaks = round(log10(significance_threshold)):round(log10(min(ck@compareClusterResult$p.adjust)))
my_log_breaks = my_log_breaks[ my_log_breaks %% 2 == 0]
my_breaks = 10**my_log_breaks
p5 = p1 +  scale_fill_viridis(direction=-1, trans="log", breaks = my_breaks, option='cividis')
print(p5)
# arguably this plot communicates best data patterns, IMHO
# importantly, store your fuctional enrichment in a form of table which will be a supplementary file of your paper
storage_file = 'clusterProfiler_enrichments.tsv'
write.table(ck@compareClusterResult, storage_file, quote=FALSE, sep='\t')
#if (!require("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("ReactomePA")
#BiocManager::install("tictoc")
#BiocManager::install("wesanderson")
#
# 0. load libraries
#
library(crayon)
library(clusterProfiler)
library(enrichplot)
library(tictoc)
library(viridis)
library(ggplot2)
#
# 2. read files and generate lists of genes
#
filename = 'deps.04.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps04 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps04)
filename = 'deps.24.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps24 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps24)
geneLists = list('DEPs t = 4 h'=deps04$ENTREZID,
'DEPs t = 24 h'=deps24$ENTREZID)
#
# 3. run the analysis on different Ontologies
#
# this step takes surprisingly long time---
significance_threshold = 0.01
tic()
ck = compareCluster(geneLists,
fun="enrichPathway",
pvalueCutoff=significance_threshold)
toc()
p1 = dotplot(ck, size='count', showCategory=15, font.size=8)
print(p1)
# and I have a preference for cividis, but this is just personal preference
my_log_breaks = round(log10(significance_threshold)):round(log10(min(ck@compareClusterResult$p.adjust)))
my_log_breaks = my_log_breaks[ my_log_breaks %% 2 == 0]
my_breaks = 10**my_log_breaks
p5 = p1 +  scale_fill_viridis(direction=-1, trans="log", breaks=my_breaks, option='cividis')
print(p5)
# arguably this plot communicates best data patterns, IMHO
# importantly, store your fuctional enrichment in a form of table which will be a supplementary file of your paper
storage_file = 'clusterProfiler_enrichments.tsv'
write.table(ck@compareClusterResult, storage_file, quote=FALSE, sep='\t')
#if (!require("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("ReactomePA")
#BiocManager::install("tictoc")
#BiocManager::install("wesanderson")
#
# 0. load libraries
#
library(crayon)
library(clusterProfiler)
library(enrichplot)
library(tictoc)
library(viridis)
library(ggplot2)
#
# 2. read files and generate lists of genes
#
filename = 'deps.04.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps04 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps04)
filename = 'deps.24.tsv'
df = read.table(filename, sep='\t', header=TRUE)
ensemblIDs = df$ENSEMBL
deps24 = bitr(ensemblIDs, fromType = 'ENSEMBL', toType = 'ENTREZID', OrgDb='org.Hs.eg.db')
dim(deps24)
geneLists = list('DEPs t = 4 h'=deps04$ENTREZID,
'DEPs t = 24 h'=deps24$ENTREZID)
#
# 3. run the analysis on different Ontologies
#
# this step takes surprisingly long time---
significance_threshold = 0.05
tic()
ck = compareCluster(geneLists,
fun="enrichPathway",
pvalueCutoff=significance_threshold)
toc()
p1 = dotplot(ck, size='count', showCategory=15, font.size=8)
print(p1)
# and I have a preference for cividis, but this is just personal preference
my_log_breaks = round(log10(significance_threshold)):round(log10(min(ck@compareClusterResult$p.adjust)))
my_log_breaks = my_log_breaks[ my_log_breaks %% 2 == 0]
my_breaks = 10**my_log_breaks
p5 = p1 +  scale_fill_viridis(direction=-1, trans="log", breaks=my_breaks, option='cividis')
print(p5)
# arguably this plot communicates best data patterns, IMHO
# importantly, store your fuctional enrichment in a form of table which will be a supplementary file of your paper
storage_file = 'clusterProfiler_enrichments.tsv'
write.table(ck@compareClusterResult, storage_file, quote=FALSE, sep='\t')
#if (!require("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("ReactomePA")
#BiocManager::install("tictoc")
#BiocManager::install("wesanderson")
#
# 0. load libraries
#
library(crayon)
library(clusterProfiler)
library(enrichplot)
library(tictoc)
library(viridis)
library(ggplot2)
#
# 2. read files and generate lists of genes
#
filename = 'deps.04.blue.tsv'
df = read.table(filename, sep='\t', header=TRUE)
#if (!require("BiocManager", quietly = TRUE))
#  install.packages("BiocManager")
#BiocManager::install("clusterProfiler")
#BiocManager::install("org.Hs.eg.db")
#BiocManager::install("ReactomePA")
#BiocManager::install("tictoc")
#BiocManager::install("wesanderson")
#
# 0. load libraries
#
library(crayon)
library(clusterProfiler)
library(enrichplot)
library(tictoc)
library(viridis)
library(ggplot2)
#
# 2. read files and generate lists of genes
#
filename = 'deps.04.blue.tsv'
df = read.table(filename, sep='\t', header=TRUE)
